<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pvsoul.datacollection.jinlang.mapper.InverterAcDataMapper">
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="OTHER" property="inverterDataId" />
    <result column="u" jdbcType="REAL" property="u" />
    <result column="i" jdbcType="REAL" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="index" jdbcType="INTEGER" property="index" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time, index
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time, index
      )
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=OTHER}, 
      #{u,jdbcType=REAL}, #{i,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, #{index,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="index != null">
        index,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        #{u,jdbcType=REAL},
      </if>
      <if test="i != null">
        #{i,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=REAL},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="index != null">
        index = #{index,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      u = #{u,jdbcType=REAL},
      i = #{i,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      index = #{index,jdbcType=INTEGER}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="OTHER" property="inverterDataId" />
    <result column="u" jdbcType="REAL" property="u" />
    <result column="i" jdbcType="REAL" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time)
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=OTHER}, 
      #{u,jdbcType=REAL}, #{i,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        #{u,jdbcType=REAL},
      </if>
      <if test="i != null">
        #{i,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=REAL},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      u = #{u,jdbcType=REAL},
      i = #{i,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="OTHER" property="inverterDataId" />
    <result column="u" jdbcType="INTEGER" property="u" />
    <result column="i" jdbcType="INTEGER" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time)
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=OTHER}, 
      #{u,jdbcType=INTEGER}, #{i,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      u = #{u,jdbcType=INTEGER},
      i = #{i,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="OTHER" property="inverterDataId" />
    <result column="u" jdbcType="INTEGER" property="u" />
    <result column="i" jdbcType="INTEGER" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time)
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=OTHER}, 
      #{u,jdbcType=INTEGER}, #{i,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=OTHER},
      u = #{u,jdbcType=INTEGER},
      i = #{i,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="INTEGER" property="inverterDataId" />
    <result column="u" jdbcType="INTEGER" property="u" />
    <result column="i" jdbcType="INTEGER" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time)
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=INTEGER}, 
      #{u,jdbcType=INTEGER}, #{i,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=INTEGER},
      </if>
      <if test="u != null">
        #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=INTEGER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=INTEGER},
      u = #{u,jdbcType=INTEGER},
      i = #{i,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
  <resultMap id="BaseResultMap" type="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="collect_record_id" jdbcType="OTHER" property="collectRecordId" />
    <result column="inverter_data_id" jdbcType="INTEGER" property="inverterDataId" />
    <result column="u" jdbcType="INTEGER" property="u" />
    <result column="i" jdbcType="INTEGER" property="i" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collect_record_id, inverter_data_id, u, i, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from inverter_ac_data
    where id = #{id,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data (id, collect_record_id, inverter_data_id, 
      u, i, create_time)
    values (#{id,jdbcType=OTHER}, #{collectRecordId,jdbcType=OTHER}, #{inverterDataId,jdbcType=INTEGER}, 
      #{u,jdbcType=INTEGER}, #{i,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    insert into inverter_ac_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectRecordId != null">
        collect_record_id,
      </if>
      <if test="inverterDataId != null">
        inverter_data_id,
      </if>
      <if test="u != null">
        u,
      </if>
      <if test="i != null">
        i,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="collectRecordId != null">
        #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        #{inverterDataId,jdbcType=INTEGER},
      </if>
      <if test="u != null">
        #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    <set>
      <if test="collectRecordId != null">
        collect_record_id = #{collectRecordId,jdbcType=OTHER},
      </if>
      <if test="inverterDataId != null">
        inverter_data_id = #{inverterDataId,jdbcType=INTEGER},
      </if>
      <if test="u != null">
        u = #{u,jdbcType=INTEGER},
      </if>
      <if test="i != null">
        i = #{i,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pvsoul.datacollection.jinlang.entity.InverterAcData">
    update inverter_ac_data
    set collect_record_id = #{collectRecordId,jdbcType=OTHER},
      inverter_data_id = #{inverterDataId,jdbcType=INTEGER},
      u = #{u,jdbcType=INTEGER},
      i = #{i,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=OTHER}
  </update>
</mapper>